import salsa_lite.language.JoinDirector;
import object salsa_lite.runtime.StageService;

behavior ThreadRing {
    ThreadRing next;
    int id;
    
    ThreadRing(int id) {
        self.id = id;
    }

    ThreadRing(String[] args) {
        if (args.length != 2) {
            System.out.println("Usage: java ThreadRing <threadCount> <hopCount>");
            pass;
        }

        int threadCount = Integer.parseInt(args[0]);
        int hopCount = Integer.parseInt(args[1]);

        //ThreadRing first = new ThreadRing(1) called ("threadring_1");
        ThreadRing first = new ThreadRing(1) on (1);
        JoinDirector jd = new JoinDirector();

        ThreadRing next = null;
        ThreadRing previous = first;
        for (int i = 1; i < threadCount; i++) {
            next = new ThreadRing(i + 1) on (i + 1);
            previous<-setNextThread(next) @ jd<-join();
            previous = next;
        }
        next<-setNextThread(first) @ jd<-join();

        jd<-resolveAfter(threadCount) @
        first<-forwardMessage(hopCount);
    }

    ack setNextThread(ThreadRing next) {
        self.next = next;
    }

    ack forwardMessage(int value) {
        if (value == 0) {
            System.out.println(id);
            System.exit(0);
        } else {
            value--;
            next<-forwardMessage(value);
        }
    }
}

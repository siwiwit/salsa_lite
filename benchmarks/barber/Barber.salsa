module salsa_lite.benchmarks.barber;
import salsa_lite.language.JoinDirector;
behavior Barber{
   WaitingRoom theWaitingRoom;
   JoinDirector customerJoin;
   JoinDirector jd;
   Barber(){}
   Barber (String[] args){
      int n = Integer.parseInt(args[0]);
      int w = Integer.parseInt(args[1]);
      Barber b=new Barber();
      JoinDirector j= new JoinDirector();
      b<-Barber(n,w,j);
      j<-resolveAfter(1)@
      self<-exit();
   }
   ack Barber(int n,int w,JoinDirector j){
      jd=j;
      Barber b=self;
      customerJoin=new JoinDirector();
      WaitingRoom wr= new WaitingRoom(w,b);
      b<-setWaitingRoom(wr);
      Customer[] tempC= new Customer[n];
      for(int i=0; i < n; i++){
         tempC[i]=new Customer(i, wr,customerJoin);
         tempC[i]<-leave();
      }
      customerJoin<-resolveAfter(n)@
      jd<-join();
   }
   ack setWaitingRoom(WaitingRoom w){
      theWaitingRoom=w;
   }
   ack cutHair(Customer c){
      //sleep here?
      c<-done();
      theWaitingRoom<-next();  
   }
   ack sleep(){
      //System.out.println("Barber Sleeping");
   }
   ack exit(){
      System.exit(0);
   }
}
